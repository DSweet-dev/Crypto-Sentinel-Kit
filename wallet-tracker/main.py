import time
import requests
import config

# –°–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è —Ö–µ—à—ñ–≤ –æ—Å—Ç–∞–Ω–Ω—ñ—Ö –æ–±—Ä–æ–±–ª–µ–Ω–∏—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ–π
last_tx_hashes = {wallet["address"]: None for wallet in config.WALLETS_TO_TRACK}

def send_telegram_message(message):
    """–ù–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ Telegram."""
    url = f"https://api.telegram.org/bot{config.TELEGRAM_BOT_TOKEN}/sendMessage"
    payload = {
        "chat_id": config.TELEGRAM_CHAT_ID,
        "text": message,
        "parse_mode": "Markdown"
    }
    try:
        response = requests.post(url, json=payload)
        response.raise_for_status()
        print("Telegram notification sent!")
    except requests.exceptions.RequestException as e:
        print(f"Failed to send Telegram message: {e}")

def check_wallet_transactions(wallet):
    """–ü–µ—Ä–µ–≤—ñ—Ä—è—î —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó –¥–ª—è –æ–¥–Ω–æ–≥–æ –≥–∞–º–∞–Ω—Ü—è."""
    address = wallet["address"]
    url = (f"https://api.etherscan.io/api?module=account&action=txlist&address={address}"
           f"&startblock=0&endblock=99999999&sort=desc&page=1&offset=5"
           f"&apikey={config.ETHERSCAN_API_KEY}")
    
    try:
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        
        if data["status"] == "1" and data["result"]:
            latest_tx = data["result"][0]
            tx_hash = latest_tx["hash"]
            
            # –Ø–∫—â–æ —Ü–µ –Ω–æ–≤–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è, –æ–±—Ä–æ–±–ª—è—î–º–æ —ó—ó
            if last_tx_hashes[address] != tx_hash:
                last_tx_hashes[address] = tx_hash # –û–Ω–æ–≤–ª—é—î–º–æ —Ö–µ—à
                
                # –ù–µ –Ω–∞–¥—Å–∏–ª–∞—Ç–∏ —Å–ø–æ–≤—ñ—â–µ–Ω–Ω—è –ø—Ä–∏ –ø–µ—Ä—à–æ–º—É –∑–∞–ø—É—Å–∫—É
                if last_tx_hashes[address] is None:
                     last_tx_hashes[address] = tx_hash
                     print(f"Initial transaction for {wallet['name']} set to {tx_hash[:10]}...")
                     return

                value_eth = int(latest_tx['value']) / 10**18
                direction = "‚û°Ô∏è Incoming" if latest_tx['to'].lower() == address.lower() else "‚¨ÖÔ∏è Outgoing"
                
                message = (
                    f"üîî *New Transaction for {wallet['name']}* üîî\n\n"
                    f"{direction}\n"
                    f"*Value:* {value_eth:.4f} ETH\n"
                    f"*From:* `{latest_tx['from']}`\n"
                    f"*To:* `{latest_tx['to']}`\n\n"
                    f"[View on Etherscan](https://etherscan.io/tx/{tx_hash})"
                )
                send_telegram_message(message)
                
    except Exception as e:
        print(f"Error checking wallet {wallet['name']}: {e}")

if __name__ == "__main__":
    print("Starting wallet tracker...")
    while True:
        for wallet_info in config.WALLETS_TO_TRACK:
            check_wallet_transactions(wallet_info)
            time.sleep(5) # –ù–µ–≤–µ–ª–∏–∫–∞ –∑–∞—Ç—Ä–∏–º–∫–∞ –º—ñ–∂ –∑–∞–ø–∏—Ç–∞–º–∏ –¥–æ API
        print("Cycle finished. Waiting for 30 seconds...")
        time.sleep(30)
